@using Blazor.Diagrams.Components.Renderers
@using Blazor.Diagrams.Core.Models
@using PUBGReddit.UGC.App.DiagramWidget
@inject HttpClient Http
@inject IJSRuntime JS

@((MarkupString)svgContent)
<g>
 
<PortRenderer Port="Node.GetPort(PortAlignment.Left)">
    <circle cx="0" cy="50" r="7"></circle>
</PortRenderer>

<PortRenderer Port="Node.GetPort(PortAlignment.Right)">
    <circle cx="100" cy="50" r="7"></circle>
</PortRenderer>
</g>

@code {
    // This gets filled by the library
    [Parameter] public AirDropNode Node { get; set; } = null!;
    string svgContent; 

protected override async Task OnInitializedAsync()
{
    // Select a random SVG file from the DeviceSVG folder
    var svgFiles = new string[]
    {
        "AirDrop.svg",
        "AirPlane.svg",
        "PlayerEvent.svg",
        "BGM.svg",
        "Interaction.svg",
        "Mover.svg",
        "RandomTrigger.svg",
        "RedZone.svg",
        "VehicleSpawn.svg",
        "SuperJump.svg"
    };
    
    // Generate a random index
    var random = new Random();
    var randomIndex = random.Next(0, svgFiles.Length);
    
    // Get the selected SVG file
    var selectedFile = svgFiles[randomIndex];
    
    // Load the SVG content
    svgContent = await Http.GetStringAsync($"images/DeviceSVG/{selectedFile}");
}


 
}