@using Blazor.Diagrams.Components.Renderers
@using Blazor.Diagrams.Core.Models
@using PUBG.Reddit.UGC.Models
@using PUBGReddit.UGC.App.DiagramWidget
@inject HttpClient Http
@((MarkupString)svgContent)
<g>
 
<PortRenderer Port="Node.GetPort(PortAlignment.Left)">
    <circle cx="0" cy="50" r="7"></circle>
</PortRenderer>

<PortRenderer Port="Node.GetPort(PortAlignment.Right)">
    <circle cx="100" cy="50" r="7"></circle>
</PortRenderer>
</g>

@code {
    // This gets filled by the library
    [Parameter] public DeviceNode Node { get; set; } = null!;
    string svgContent; 

protected override async Task OnInitializedAsync()
{
    // Get all device types from the enum
    var deviceTypes = Enum.GetValues(typeof(DeviceType)).Cast<DeviceType>().ToArray();
    
    // Generate a random index
    var random = new Random();
    var randomIndex = random.Next(0, deviceTypes.Length);
    
    // Get a random device type
    var selectedDeviceType = deviceTypes[randomIndex];
    
    // Convert the enum value to a file name
    var selectedFile = $"{selectedDeviceType}.svg";
    
    // Load the SVG content
    svgContent = await Http.GetStringAsync($"images/DeviceSVG/{selectedFile}");
} 
}